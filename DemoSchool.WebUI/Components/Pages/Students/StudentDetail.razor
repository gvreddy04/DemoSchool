@page "/students/{studentId:int}"

<!--begin::Page Header-->
<div class="page-header d-print-none">
    <div class="d-flex flex-wrap flex-sm-nowrap justify-content-between align-items-center">
        <!--begin::Info-->
        <div class="d-flex flex-column align-items-start justify-content-center flex-wrap me-2">
            <!--begin::Breadcrumb-->
            <ul class="breadcrumb fw-bold fs-base my-1">
                <li class="breadcrumb-item text-muted">
                    <a href="/students" class="text-muted text-hover-primary">Students</a>
                </li>
                <li class="breadcrumb-item text-dark">Student details</li>
            </ul>
            <!--end::Breadcrumb-->
            <!--begin::Title-->
            <!--end::Title-->
        </div>
        <!--end::Info-->
        <!--begin::Actions-->
        <!--end::Actions-->
    </div>
</div>
<!--end::Page Header-->

<div class="row justify-content-lg-center">
    <div class="col">
        <!-- Profile Cover -->
        <div class="profile-cover">
            <div class="profile-cover-img-wrapper">
                <img class="profile-cover-img" src="/images/profile-cover-02.jpg" alt="Profile Cover">
            </div>
        </div>
        <!-- End Profile Cover -->
        <!-- Profile Header -->
        <div class="text-center mb-5">
            <!-- Avatar -->
            <div class="avatar avatar-xxl avatar-circle profile-cover-avatar">
                <img class="avatar-img" src="/icons/user.svg" width="160" height="160" alt="Profile">
            </div>
            <!-- End Avatar -->
            @if (student?.StudentName is not null)
            {
                <h4 class="page-header-title">@student.StudentName</h4>
            }

            <!-- List -->
            <ul class="list-inline list-px-2">

                @if (address is not null)
                {
                    <li class="list-inline-item">
                        <i class="bi-geo-alt me-1"></i>
                        <a href="#">@address.City,</a>
                        <a href="#">@address.Country</a>
                    </li>
                }

                @if (student?.CreatedDate is not null)
                {
                    <li class="list-inline-item">
                        <i class="bi-calendar-week me-1"></i>
                        <span>Joined @student.CreatedDate.ToString("dd MMM, yyyy")</span>
                    </li>
                }
            </ul>
            <!-- End List -->
        </div>
        <!-- End Profile Header -->
    </div>
</div>

<div class="row mb-3">
    <div class="col-lg-3">
        <!-- Navbar -->
        <ul id="navbarSettings" class="js-sticky-block js-scrollspy card card-navbar-nav nav nav-tabs nav-lg nav-vertical">
            <li class="nav-item">
                <a class="nav-link active" href="#basic-information">
                    <i class="bi-person nav-icon"></i> Basic information
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#address">
                    <i class="bi-at nav-icon"></i> Address
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#school-education">
                    <i class="bi-key nav-icon"></i> School / Education
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#other">
                    <i class="bi-gear nav-icon"></i> Other
                </a>
            </li>
        </ul>
        <!-- End Navbar -->
    </div>
    <div class="col-lg-9">
        <div class="d-grid gap-3 gap-lg-4">

            <!-- Card: Basic information -->
            <div class="card">
                <div class="card-header">
                    <h2 class="card-title h4" id="basic-information">Basic information</h2>
                </div>

                <!-- Body -->
                <div class="card-body">
                    <EditForm EditContext="@studentEditContext" OnValidSubmit="StudentHandleValidSubmit" OnInvalidSubmit="StudentHandleInvalidSubmit" novalidate>
                        <DataAnnotationsValidator />

                        <div class="row mb-4">
                            <label class="col-sm-3 col-form-label form-label">Full name</label>
                            <div class="col-sm-9">
                                <InputText class="form-control" @bind-Value="studentEditForm.StudentName" placeholder="Student name" aria-label="Student name" />
                                <ValidationMessage For="@(() => studentEditForm.StudentName)" />
                            </div>
                        </div>

                        <div class="row mb-4">
                            <label class="col-sm-3 col-form-label form-label">Parent / Gaurdian name</label>
                            <div class="col-sm-9">
                                <InputText class="form-control" @bind-Value="studentEditForm.GaurdianName" placeholder="Parent / Gaurdian name" aria-label="Parent / Gaurdian name" />
                                <ValidationMessage For="@(() => studentEditForm.GaurdianName)" />
                            </div>
                        </div>

                        <div class="row mb-4">
                            <label class="col-sm-3 col-form-label form-label">Gender</label>
                            <div class="col-sm-9">
                                <InputRadioGroup @bind-Value="studentEditForm.Gender">
                                    <div class="input-group input-group-sm-vertical">
                                        @{
                                            int radioIndex = 1;
                                            foreach (var gender in (Gender[])Enum.GetValues(typeof(Gender)))
                                            {
                                                string inputRadioId = $"genderRadio{radioIndex}";
                                                <label class="form-control" for="@inputRadioId">
                                                    <span class="form-check">
                                                        <InputRadio class="form-check-input" id="@inputRadioId" Value="@gender" />
                                                        <span class="form-check-label">@gender</span>
                                                    </span>
                                                </label>
                                                radioIndex++;
                                            }
                                        }
                                    </div>
                                </InputRadioGroup>
                                <ValidationMessage For="@(() => studentEditForm.Gender)" />
                            </div>
                        </div>

                        <div class="row mb-4">
                            <label class="col-sm-3 col-form-label form-label">Date of Birth</label>
                            <div class="col-sm-3">
                                <select class="form-select" value="@studentEditForm.YearAsString" @onchange="OnYearChanged">
                                    <option value="">Select year</option>
                                    @for (int i = DateTime.UtcNow.Year; i >= 1980; i--)
                                    {
                                        <option value="@i">@i</option>
                                    }
                                </select>
                                <ValidationMessage For="@(() => studentEditForm.YearAsString)" />
                            </div>
                            <div class="col-sm-3">
                                <select class="form-select" value="@studentEditForm.MonthAsString" disabled="@disableMonth" @onchange="OnMonthChanged">
                                    <option value="">Select month</option>
                                    <option value="1">Jan</option>
                                    <option value="2">Feb</option>
                                    <option value="3">Mar</option>
                                    <option value="4">Apr</option>
                                    <option value="5">May</option>
                                    <option value="6">Jun</option>
                                    <option value="7">Jul</option>
                                    <option value="8">Aug</option>
                                    <option value="9">Sep</option>
                                    <option value="10">Oct</option>
                                    <option value="11">Nov</option>
                                    <option value="12">Dec</option>
                                </select>
                                <ValidationMessage For="@(() => studentEditForm.MonthAsString)" />
                            </div>
                            <div class="col-sm-3">
                                <select class="form-select" value="@studentEditForm.DayAsString" disabled="@disableDay" @onchange="OnDayChanged">
                                    <option value="">Select day</option>
                                    @if (days is not null && days.Any())
                                    {
                                        foreach (var day in days)
                                        {
                                            <option value="@day">@day</option>
                                        }
                                    }
                                </select>
                                <ValidationMessage For="@(() => studentEditForm.DayAsString)" />
                            </div>
                        </div>

                        <div class="row mb-4">
                            <label class="col-sm-3 col-form-label form-label">Email</label>
                            <div class="col-sm-9">
                                <InputText class="form-control" @bind-Value="studentEditForm.Email" placeholder="Email" aria-label="Email" />
                                <ValidationMessage For="@(() => studentEditForm.Email)" />
                            </div>
                        </div>

                        <div class="row mb-4">
                            <label class="col-sm-3 col-form-label form-label">Phone number</label>
                            <div class="col-sm-4">
                                <select class="form-select" value="@studentEditForm.CountryCodeAsString" @onchange="OnCountryCodeChanged">
                                    <option value="">Select country code</option>
                                    <option value="1">+1 (US)</option>
                                    <option value="91">+91 (IN)</option>
                                </select>
                                <ValidationMessage For="@(() => studentEditForm.CountryCodeAsString)" />
                            </div>
                            <div class="col-sm-5">
                                <InputText class="form-control" @bind-Value="studentEditForm.PhoneNumber" placeholder="Phone number" aria-label="Phone number" />
                                <ValidationMessage For="@(() => studentEditForm.PhoneNumber)" />
                            </div>
                        </div>

                        <div class="d-flex justify-content-end">
                            <Button @ref="studentSaveButton" Color="ButtonColor.Primary" Type="ButtonType.Submit">
                                <Icon Name="IconName.Save" class="me-1"></Icon> Save changes
                            </Button>
                        </div>

                    </EditForm>
                </div>
                <!-- End Body -->
            </div>
            <!-- End Card: Basic information -->
            <!-- Card: Address -->
            <div class="card">
                <div class="card-header">
                    <h2 class="card-title h4" id="address">Address</h2>
                </div>

                <!-- Body -->
                <div class="card-body">
                    <EditForm EditContext="@studentAddressEditContext" OnValidSubmit="StudentAddressHandleValidSubmit" OnInvalidSubmit="StudentAddressHandleInvalidSubmit" novalidate>
                        <DataAnnotationsValidator />

                        <div class="row mb-4">
                            <label class="col-sm-3 col-form-label form-label">Address Line1</label>
                            <div class="col-sm-9">
                                <InputText class="form-control" @bind-Value="studentAddressEditForm.AddressLine1" placeholder="Address Line1" aria-label="Address Line1" />
                                <ValidationMessage For="@(() => studentAddressEditForm.AddressLine1)" />
                            </div>
                        </div>

                        <div class="row mb-4">
                            <label class="col-sm-3 col-form-label form-label">Address Line2</label>
                            <div class="col-sm-9">
                                <InputText class="form-control" @bind-Value="studentAddressEditForm.AddressLine2" placeholder="Address Line2" aria-label="Address Line2" />
                                <ValidationMessage For="@(() => studentAddressEditForm.AddressLine2)" />
                            </div>
                        </div>

                        <div class="row mb-4">
                            <label class="col-sm-3 col-form-label form-label">Address Line3</label>
                            <div class="col-sm-9">
                                <InputText class="form-control" @bind-Value="studentAddressEditForm.AddressLine3" placeholder="Address Line3" aria-label="Address Line3" />
                                <ValidationMessage For="@(() => studentAddressEditForm.AddressLine3)" />
                            </div>
                        </div>

                        <div class="row mb-4">
                            <label class="col-sm-3 col-form-label form-label">City</label>
                            <div class="col-sm-9">
                                <InputText class="form-control" @bind-Value="studentAddressEditForm.City" placeholder="City" aria-label="City" />
                                <ValidationMessage For="@(() => studentAddressEditForm.City)" />
                            </div>
                        </div>

                        <div class="row mb-4">
                            <label class="col-sm-3 col-form-label form-label">Country</label>
                            <div class="col-sm-9">
                                <InputText class="form-control" @bind-Value="studentAddressEditForm.Country" placeholder="Country" aria-label="Country" />
                                <ValidationMessage For="@(() => studentAddressEditForm.Country)" />
                            </div>
                        </div>

                        <div class="row mb-4">
                            <label class="col-sm-3 col-form-label form-label">State</label>
                            <div class="col-sm-9">
                                <InputText class="form-control" @bind-Value="studentAddressEditForm.State" placeholder="State" aria-label="State" />
                                <ValidationMessage For="@(() => studentAddressEditForm.State)" />
                            </div>
                        </div>

                        <div class="row mb-4">
                            <label class="col-sm-3 col-form-label form-label">Zip code</label>
                            <div class="col-sm-9">
                                <InputText class="form-control" @bind-Value="studentAddressEditForm.ZipCode" placeholder="Zip code" aria-label="Zip code" />
                                <ValidationMessage For="@(() => studentAddressEditForm.ZipCode)" />
                            </div>
                        </div>

                        <div class="d-flex justify-content-end">
                            <Button @ref="addressSaveButton" Color="ButtonColor.Primary" Type="ButtonType.Submit">
                                <Icon Name="IconName.Save" class="me-1"></Icon> Save changes
                            </Button>
                        </div>

                    </EditForm>
                </div>
                <!-- End Body -->
                <!-- End Body -->
            </div>
            <!-- End Card: Address -->
        </div>
    </div>
</div>
